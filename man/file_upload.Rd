% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file.R
\name{file_upload}
\alias{file_upload}
\title{Upload batch file}
\usage{
file_upload(jsonl_path, purpose = "batch")
}
\arguments{
\item{jsonl_path}{(chr) path to a file to upload}

\item{purpose}{(chr, default = "batch") The intended purpose of the
uploaded file. Use "assistants" for Assistants and Message files,
"vision" for Assistants image file inputs, "batch" for Batch API,
and "fine-tune" for Fine-tuning.}
}
\value{
(tibble) information about the uploaded file
}
\description{
Upload batch file
}
\details{
For more information, see
\itemize{
\item \href{https://platform.openai.com/docs/api-reference/batch}{batch documentation}.
\item \href{https://platform.openai.com/docs/api-reference/files}{file documentation}.

At the moment, 'gpteasyr' is tested on file upload for the batch
API only (still it should work for the other also).
\subsection{Files for batch API Your input file must be formatted as a}{

\href{https://platform.openai.com/docs/api-reference/batch/request-input}{JSONL file}.

The file can contain up to 50,000 requests, can be up to 100 MB in
size, and the size of all files uploaded by one organization can be
up to 100 GB.
}
}
}
\examples{
 sys_prompt <- compose_sys_prompt("You are a funny assistant.")
 usr_prompt <- compose_usr_prompt(
   "Tell me a joke ending in:"
 )
 prompter <- create_usr_data_prompter(usr_prompt = usr_prompt)
 text <-  c(
   "deadly boring!",
   "A bit boring, but interesting",
   "How nice, I loved it!"
 )

 jsonl_text <- text |>
   purrr::map(
     \(x) {
       compose_prompt_api(
         sys_prompt = sys_prompt,
         usr_prompt = prompter(x)
       )
     }
   ) |>
   create_jsonl_records()
 out_jsonl_path <- write_jsonl_files(jsonl_text, tempdir())

uploaded_file_info <- file_upload(out_jsonl_path)
file_delete(uploaded_file_info[["id"]])
}
\seealso{
Other batches: 
\code{\link{batch_cancel}()},
\code{\link{batch_create}()},
\code{\link{batch_list}()},
\code{\link{batch_result}()},
\code{\link{batch_status}()}

Other files: 
\code{\link{file_delete}()},
\code{\link{file_info}()},
\code{\link{file_list}()},
\code{\link{file_retrieve}()}
}
\concept{batches}
\concept{files}
