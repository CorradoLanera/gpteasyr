% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_gpt.R
\name{query_gpt_on_column}
\alias{query_gpt_on_column}
\title{Compose the ChatGPT System prompt}
\usage{
query_gpt_on_column(
  db,
  text_column,
  role = role,
  context = context,
  task = task,
  instructions = instructions,
  output = output,
  style = style,
  examples = examples,
  model = c("gpt-3.5-turbo", "gpt-4-turbo"),
  quiet = TRUE,
  max_try = 10,
  temperature = 0,
  max_tokens = 1000,
  include_source_text = TRUE,
  simplify = TRUE
)
}
\arguments{
\item{db}{(data.frame) the data to use}

\item{text_column}{(chr) the name of the column containing the text
data}

\item{role}{(chr) the role of the assistant in the context}

\item{context}{(chr) the context of the assistant in the context}

\item{task}{(chr) the task to perform}

\item{instructions}{(chr) the instructions to follow}

\item{output}{(chr) the output required}

\item{style}{(chr) the style to use in the output}

\item{examples}{(chr) some examples of correct output}

\item{model}{(chr, default = "gpt-3.5-turbo") the model to use}

\item{quiet}{(lgl, default = TRUE) whether to print information}

\item{max_try}{(int, default = 10) the maximum number of tries}

\item{temperature}{(dbl, default = 0) the temperature to use}

\item{max_tokens}{(dbl, default = 1000) the maximum number of tokens}

\item{include_source_text}{(lgl, default = TRUE) whether to include
the source text}

\item{simplify}{(lgl, default = TRUE) whether to simplify the output}
}
\value{
(tibble) the result of the query
}
\description{
Compose the ChatGPT System prompt
}
\examples{
if (FALSE) {

 db <- tibble(
   commenti = c(
     "Che barba, che noia!",
     "Un po' noioso, ma interessante",
     "Che bello, mi è piaciuto molto!"
   )
 )

 role <- "Sei l'assistente di un docente universitario."
 context <- "State analizzando i commenti degli studenti dell'ultimo corso."
 task <- "Il tuo compito è capire se sono soddisfatti del corso."
 instructions <- "Analizza i commenti e decidi se sono soddisfatti o meno."
 output <- "Riporta 'soddisfatto' o 'insoddisfatto'."
 style <- "Non aggiungere nessun commento, restituisci solo ed
   esclusivamente la classificazione."
 examples <- "
 commento_1: 'Mi è piaciuto molto il corso; davvero interessante.'
 classificazione_1: 'soddisfatto'
 commento_2: 'Non mi è piaciuto per niente; una noia mortale'
 classificazione_2: 'insoddisfatto'
 "
 res <- db |>
  query_gpt_on_column(
    "commenti",
    role = role,
    context = context,
    task = task,
    instructions = instructions,
    output = output,
    style = style,
    examples = examples
  )
 res
}
}
